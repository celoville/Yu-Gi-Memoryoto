{"version":3,"sources":["components/Counter.jsx","components/SingleCard.jsx","components/YouLose.jsx","App.js","index.js"],"names":["Counter","turnCount","style","display","justifyContent","alignItems","marginTop","background","borderRadius","minWidth","marginLeft","opacity","color","SingleCard","card","handleChoice","flipped","option","max","className","src","alt","onClick","YouLose","shuffleCards","cardImages","matched","App","useState","cards","setCards","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setTurnCount","shuffleDCards","sort","Math","random","map","id","useEffect","prevCards","setTimeout","resetTurn","prevTurns","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c457a349.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport const Counter = ({turnCount}) => {\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '1em', background:'white', borderRadius: '5px', minWidth: '2em', marginLeft: '1em', opacity:'.8',}}>\n        <h4 style={{color: '#000', }}>\n            \n       Turns taken\n        </h4>\n<div style={{ marginLeft: '1em'}}>\n\n        <h4 style={{color: '#000', }}>\n             {turnCount}\n        </h4>\n</div>\n    </div>\n  )\n\n} ","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport './SingleCard.css';\n\nfunction SingleCard( {card, handleChoice, flipped}) {\n\n    const handleClick = () => {\n        handleChoice(card)\n\n    }\n\n    return (\n<Tilt option={{max:25}}>\n        <div className='card' option >\n            <div className={flipped ? 'flipped' : ''}>\n                <img src={card.src} className={'front'} alt={\"front card\"} />\n                <img src={\"img/cover.png\"} className={'back'} alt={\"back card\"} onClick={handleClick} />\n            </div>\n        </div>\n\n</Tilt>\n\n\n    )\n}\n\nexport default SingleCard","import React from 'react'\nimport '../App.css'\n\n\nfunction YouLose({shuffleCards}) {\n  return (\n    <div className='modal'>\n        <div>\n            <h4>\n\n        YouLose\n            </h4>\n        <button className='modal-restart' onClick={shuffleCards}>Let's Duel</button>\n\n        </div>\n\n    </div>\n  )\n}\n\nexport default YouLose","import { useEffect, useState } from 'react'\nimport './App.css'\nimport { Counter } from './components/Counter'\nimport SingleCard from './components/SingleCard'\nimport YouLose from './components/YouLose'\n\nconst cardImages = [\n  { \"src\": \"/img/cards/blue_eyes.jpg\", matched: false },\n  { \"src\": \"/img/cards/pot_of_greed.webp\", matched: false },\n  { \"src\": \"/img/cards/obelisk.jpg\" , matched: false},\n  { \"src\": \"/img/cards/slipher.jpg\", matched: false },\n  { \"src\": \"/img/cards/ra.jpg\", matched: false },\n  { \"src\": \"/img/cards/dark_magician.jpg\" , matched: false},\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n\n  // this sets the choices\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [turnCount, setTurnCount] = useState(0)\n  // shuffle card function\n  const shuffleCards = () => {\n    const shuffleDCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }))\n\n    setCards(shuffleDCards)\n    setTurns(0)\n    setTurnCount(0)\n\n  }\n\n  // handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n// this will compare the cards\n  useEffect(() => {\n    if(choiceOne && choiceTwo) {\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } else{\n              return card\n            }\n          })\n        })\n\n        // console.log(\"Those cards MATCH!!\")\n        setTimeout(() => resetTurn(), 500) \n\n      } else {\n        // console.log(\"No Match.\")\n        setTimeout(() => resetTurn(), 500) \n      }\n      setTurnCount(turnCount +1)\n    }\n\n    // this will reset the turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n\n  }\n\n  },[choiceOne, choiceTwo])\n\n\n  console.log(cards)\n\n  return (\n    <div className=\"App\">\n      <h1>Heart of the Cards</h1>\n      <button onClick={shuffleCards}>Let's Duel</button>\n      <Counter turnCount={turnCount} />\n      <div className='card-grid' >\n        {cards.map(card => (\n          <SingleCard\n            handleChoice={handleChoice}\n            key={card.id}\n            card={card}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            // disable={}\n          />\n        ))}\n\n\n      </div>\n\n      {\n        turnCount > 18 &&\n\n        <YouLose shuffleCards={shuffleCards}/>\n\n      }\n\n    </div>\n  );\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}